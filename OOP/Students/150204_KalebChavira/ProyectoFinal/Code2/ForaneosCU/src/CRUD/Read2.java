/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CRUD;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author compu
 */
public class Read2 extends javax.swing.JFrame {

      Connection conexion;// creamos una variable llamada conexion para hacer la conexion
Statement sentencia;// creamos una variables para hacer las sentencias sql


    DefaultTableModel tabla = new DefaultTableModel() {
   /*  @Override
       public boolean isCellEditable(int Fila, int Colum) {
            return false;
       }*/
   };
    public Read2() {
 initComponents();//iniciar los componentes de las clases
        conectatarBaseDatos();// invocamos el constructor que hara la conexion a la base de datos
        setLocationRelativeTo(null);//codigo para centrar la forma de manera nulo o en el centro de la pantalla
       //cargarTitulosColumas();// metodo para poner las cabezeras de las tablas
     //   cargarDatos();//metodo para cargar los datos de la bd
    }
    
       public void conectatarBaseDatos() {// constructor que conecta la base de datos con el codigo
        try {
           
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver"); //Linea que carga el driver
           JOptionPane.showMessageDialog(null, "Cargo el driver");//mensaje
        } catch (ClassNotFoundException e) {//en caso de que no funcione el driver
            JOptionPane.showMessageDialog(null, "Error al cargar Dirver");//mensaje
        }
        try {
  conexion = DriverManager.getConnection("jdbc:ucanaccess://C:\\Users\\compu\\OneDrive\\Documentos\\BD\\hotel.accdb");//busca la ubicacion de la BD y se enlaza
  JOptionPane.showMessageDialog(null,"Encontro la direccion");//mensaje

  //"jdbc:ucanaccess://C:\\Proyecto.accdb"
//En esta parte tenemos que cambiar la ruta en la que se encuentra nuestra base de datos 
//Ejemplo "jdbc:ucanaccess://C:\\Proyecto.accdb" hace referencia que esta en el disco local C
//JOptionPane.showMessageDialog(null, "Encontro la direccion");
        } catch (SQLException e) {// en caso de que no carge la sentencia hace una Exception la cual no encuentra la direccion
            JOptionPane.showMessageDialog(null, "Error en la dirección de la base de datos");//menasje
        }
        try {
            sentencia = conexion.createStatement();// crea una sentencia para poder mandar el codigo de sql
           JOptionPane.showMessageDialog(null, "Cargo la sentencia");//mensaje
        } catch (SQLException e) {//en caso de que no carge la sentencia busca otra exception para identificar el error
            JOptionPane.showMessageDialog(null, "Error al crear la conexión con la base de datos");// mensaje
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane1 = new java.awt.ScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "TipoDeHabitacion", "Numero de Dias", "Dia Entrada", "Dia Salida", "Costo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        scrollPane1.add(jScrollPane1);

        Busca.setText("Busqueda");
        Busca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscaActionPerformed(evt);
            }
        });

        jLabel1.setText("ID:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtcampo, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Busca)
                        .addGap(0, 408, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(scrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtcampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Busca))
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscaActionPerformed
     String campo = txtcampo.getText();
        String WHERE = "";
        if (!"".equals(campo)) {
            WHERE = "WHERE ID = '" + campo + "'";
        }
        
 DefaultTableModel tabla = new DefaultTableModel();
   tabla.addColumn("ID");//añadir columna de ID del registro de la bd
        tabla.addColumn("Nombre");//añadir columna de Nombre del registro de la bd
        tabla.addColumn("TipoHabitacion");//añadir columna del tipo de habitacion del registro de la bd
        tabla.addColumn("NHabitacion");//añadir columna de ID del registro de la bd
        tabla.addColumn("DiaEntrada");//añadir columna de ID del registro de la bd
        tabla.addColumn("DiaSalida");//añadir columna de ID del registro de la bd
        tabla.addColumn("Costo  ");//añadir columna de ID del registro de la bd
        this.jTable1.setModel(tabla);
        
      String altas[] = new String[7];    //Variable que almacena los datos de la consulta
        String sql = "SELECT  ID, Nombre , TipoHabitacion , NHabitacion , DiaEntrada , DiaSalida , Costo from Altas " + WHERE ;  //Consulta sql
        try {
            ResultSet resultado = sentencia.executeQuery(sql);  //Linea que ejecuta la consulta sql y almacena los datos en resultado

            while (resultado.next()) {                                    //Bucle que recorre la consulta obtenida
                altas[0] = resultado.getString("ID");
                altas[1] = resultado.getString("Nombre");
                altas[2] = resultado.getString("TipoHabitacion");
                altas[3] = resultado.getString("NHabitacion");
                altas[4] = resultado.getString("DiaEntrada");
                altas[5] = resultado.getString("DiaSalida");
                altas[6] = resultado.getString("Costo");
                tabla.addRow(altas);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al cargar los Datos\n");
            Logger.getLogger(Create.class.getName()).log(Level.SEVERE, null, ex);//arroja el error que tuvo el codigo de sql
        }
        
    }//GEN-LAST:event_BuscaActionPerformed

    
    /*private void tablaMouseClicked(java.awt.event.MouseEvent evt){
    int fila = tabla.getSelectedRow();
    
}*/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Read2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Read2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Read2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Read2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Read2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private final javax.swing.JButton Busca = new javax.swing.JButton();
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private java.awt.ScrollPane scrollPane1;
    private final javax.swing.JTextField txtcampo = new javax.swing.JTextField();
    // End of variables declaration//GEN-END:variables
}
